{
    "guideName": {
        "en": "[test] The Star Wars guide (SPARQL only)",
        "fr": "[test] ⚒Le guide sur Star Wars (SPARQL uniquement)"
    },
    "guideDescription": {
        "en": "[test] A beginner's guide showing repository creation, importing RDF from a file, starting to explore data from the visual graph, and executing SPARQL queries.",
        "fr": "[test] ⚒Un guide de base montrant la création de répertoire, l'importation de RDF à partir d'un fichier, un graphique visuel et certaines requêtes SPARQL."
    },
    "guideLevel": 1,
    "guideOrder": 20,
    "options": {
        "repositoryIdBase": "starwars"
    },
    "steps": [
        {
            "guideBlockName": "execute-sparql-query",
            "options": {
                "queries": [
                    {
                        "query": "SELECT * {\n    <https://swapi.co/resource/human/1> ?p ?o\n}\n",
                        "queryExtraContent": {
                            "en": "The query selects RDF statements whose <i>subject</i> is <b>Luke Skywalker</b> (identified by the IRI <b>https://swapi.co/resource/human/1</b>).",
                            "fr": "⚒La requête sélectionne les déclarations RDF dont le <i>sujet</i> est <b>Luke Skywalker</b> (identifié par l'IRI <b>https://swapi.co/resource/human/1</b> )."
                        },
                        "resultExtraContent": {
                            "en": "The variables <b>?p</b> and <b>?o</b> correspond to the <i>predicate</i> and <i>object</i> of the RDF statements.",
                            "fr": "⚒Les variables <b>?p</b> et <b>?o</b> correspondent au <i>prédicat</i> et à l'<i>objet</i> des déclarations RDF."
                        }
                    },
                    {
                        "query": "PREFIX voc: <https://swapi.co/vocabulary/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT * {\n    <https://swapi.co/resource/human/1> voc:film ?movie .\n    ?movie rdfs:label ?movieName .\n}\n",
                        "queryExtraContent": {
                            "en": "The query selects all movies where <b>Luke Skywalker</b> is one of the characters and illustrates the simplest SPARQL join, using the same variable <b>?movie</b> in two different statement patterns.",
                            "fr": "⚒La requête sélectionne tous les films où <b>Luke Skywalker</b> est l'un des personnages et illustre la jointure SPARQL la plus simple, en utilisant la même variable <b>?movie</b> dans deux modèles d'instructions différents."
                        },
                        "resultExtraContent": {
                            "en": "The variables <b>?movie</b> and <b>?movieName</b> contain each movie's IRI and name respectively.",
                            "fr": "⚒Les variables <b>?movie</b> et <b>?movieName</b> contiennent respectivement l'IRI et le nom de chaque film."
                        }
                    },
                    {
                        "query": "PREFIX voc: <https://swapi.co/vocabulary/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT * {\n    <https://swapi.co/resource/human/1> voc:film ?movie .\n    ?movie rdfs:label ?movieName ;\n           voc:releaseDate ?movieReleaseDate .\n} ORDER BY ?movieReleaseDate\n",
                        "queryExtraContent": {
                            "en": "The query builds upon the previous query but adds an additional join to fetch each movie's release date, and also sorting the results by the release date.",
                            "fr": "⚒La requête s'appuie sur la requête précédente mais ajoute une jointure supplémentaire pour récupérer la date de sortie de chaque film, et également trier les résultats par date de sortie."
                        },
                        "resultExtraContent": {
                            "en": "The new variable <b>?movieReleaseDate</b> contains the release date and the results are sorted by it. We can clearly see that <b>A New Hope</b> was released first.",
                            "fr": "⚒La nouvelle variable <b>?movieReleaseDate</b> contient la date de sortie et les résultats sont triés en fonction de celle-ci. Nous pouvons clairement voir que <b>A New Hope</b> est sorti en premier."
                        }
                    }
                ]
            }
        },
        {
            "guideBlockName": "guide-end"
        }
    ]
}
